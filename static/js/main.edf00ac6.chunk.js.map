{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","props","total","perPage","currentPage","onPageChange","prevPage","nextPage","maxPage","Math","ceil","allPages","Array","from","length","_","i","className","classNames","disabled","href","onClick","map","page","active","uuidv4","getNumbers","to","numbers","n","push","itemsPerPageOptions","App","useState","setCurrentPage","perPageSelector","setPerPageSelector","firstItemOnPage","lastItemOnPage","id","value","onChange","e","target","item","htmlFor","handlePageChange","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAWF,EAAc,EACzBG,EAAWH,EAAc,EACzBI,EAAUC,KAAKC,KAAKR,EAAQC,GAC5BQ,EAAWC,MAAMC,KACrB,CAAEC,OAAQN,IACV,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAGhB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA2B,IAAhBf,IAFf,SAKE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAI,WAAMd,GACV,gBAA+B,IAAhBF,EACfiB,QAAS,kBAAMhB,EAAaC,IAL9B,oBAWDK,EAASW,KAAI,SAAAC,GAAI,OAChB,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAASpB,IAAgBmB,IAH7B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMhB,EAAakB,IAJ9B,SAMGA,KAXEE,kBAgBT,oBACER,UAAWC,IAAW,YAAa,CACjCC,SAAWf,IAAgBI,IAF/B,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMb,GACV,gBAAeH,IAAgBI,EAC/Ba,QAAS,kBAAMhB,EAAaE,IAL9B,wBCpED,SAASmB,EAAWb,EAAcc,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIhB,EAAMgB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,UCAHG,EAAsB,CAAC,EAAG,EAAG,GAAI,IAE1BC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoB8B,EAApB,KACA,EAA8CD,mBAAS,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEM5B,EAAUC,KAAKC,KAPJ,GAOsByB,GACjCE,EAAkB,GAAKjC,EAAc,GAAK+B,EAC1CG,EAAkBlC,IAAgBI,EATvB,GAWbJ,EAAc+B,EAelB,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBACEA,UAAU,OACV,UAAQ,OAFV,wBAIWb,EAJX,mBAIiCiC,EAJjC,cAIsDC,EAJtD,eA9Ba,GA8Bb,OAOA,sBAAKrB,UAAU,iBAAf,UACE,qBACEA,UAAU,2BADZ,SAME,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOL,EACPM,SAAU,SAACC,GAAD,OAnClBN,GAmC2CM,EAnCjBC,OAAOH,YACjCN,EAAe,IA6BT,SAOGH,EAAoBT,KAAI,SAAAsB,GAAI,OAC3B,wBAEEJ,MAAOI,EAFT,SAIGA,GAHInB,sBASb,uBACEoB,QAAQ,kBACR5B,UAAU,qBAFZ,+BAQF,cAAC,EAAD,CACEf,MAvEW,GAwEXC,QAASgC,EACT/B,YAAaA,EACbC,aAAc,SAACkB,GAAD,OAxDK,SAACA,GACpBA,GAAQ,GAAKA,EAAOf,GAIxB0B,EAAeX,GAmDauB,CAAiBvB,MAE3C,6BACGG,EAAWW,EAAiBC,GAAgBhB,KAAI,SAAAO,GAAC,OAChD,oBAEE,UAAQ,OAFV,wBAIWA,IAHJJ,wBClFjBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.edf00ac6.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n  const maxPage = Math.ceil(total / perPage);\n  const allPages = Array.from(\n    { length: maxPage },\n    (_, i) => i + 1,\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: (currentPage === 1),\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${prevPage}`}\n          aria-disabled={currentPage === 1}\n          onClick={() => onPageChange(prevPage)}\n        >\n          «\n        </a>\n      </li>\n\n      {allPages.map(page => (\n        <li\n          key={uuidv4()}\n          className={classNames('page-item', {\n            active: (currentPage === page),\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: (currentPage === maxPage),\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${nextPage}`}\n          aria-disabled={currentPage === maxPage}\n          onClick={() => onPageChange(nextPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState, ChangeEvent } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport './App.css';\n\nconst totalItems = 42;\nconst itemsPerPageOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPageSelector, setPerPageSelector] = useState(5);\n\n  const maxPage = Math.ceil(totalItems / perPageSelector);\n  const firstItemOnPage = 1 + (currentPage - 1) * perPageSelector;\n  const lastItemOnPage = (currentPage === maxPage)\n    ? totalItems\n    : currentPage * perPageSelector;\n\n  const handleItemPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPageSelector(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    if (page <= 0 || page > maxPage) {\n      return;\n    }\n\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p\n        className=\"lead\"\n        data-cy=\"info\"\n      >\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div\n          className=\"\n            col-3\n            col-sm-2\n            col-xl-1\"\n        >\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPageSelector}\n            onChange={(e) => handleItemPerPage(e)}\n          >\n            {itemsPerPageOptions.map(item => (\n              <option\n                key={uuidv4()}\n                value={item}\n              >\n                {item}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label\n          htmlFor=\"perPageSelector\"\n          className=\"col-form-label col\"\n        >\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPageSelector}\n        currentPage={currentPage}\n        onPageChange={(page) => handlePageChange(page)}\n      />\n      <ul>\n        {getNumbers(firstItemOnPage, lastItemOnPage).map(n => (\n          <li\n            key={uuidv4()}\n            data-cy=\"item\"\n          >\n            {`Item ${n}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}